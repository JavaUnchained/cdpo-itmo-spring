openapi: 3.0.0
info:
  title: Tech Services API
  description: API for managing tech services.
  version: 1.0.0
  contact:
    name: Tech Services Team
    email: support@techservices.com
servers:
  - url: http://localhost:8008/api/v1
tags:
  - name: Services
    description: Operations related to tech services
  - name: Bookings
    description: Operations related to tech services booking
paths:
  /services:
    post:
      operationId: createService
      description: Create a new service
      tags:
        - Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
      responses:
        '201':
          description: Service created successfully, returns the created service with its ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        '400':
          description: Invalid input data
        '500':
          description: Internal server error
    get:
      operationId: getServices
      description: Retrieve a list of all services or a specific service by ID
      tags:
        - Services
      parameters:
        - name: id
          in: query
          description: ID of the service to retrieve (optional)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A list of services or a single service object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceResponse'
        '404':
          description: Service not found
        '500':
          description: Internal server error
    delete:
      operationId: deleteServices
      description: Delete service by ID
      tags:
        - Services
      parameters:
        - name: id
          in: query
          description: ID of the service to retrieve (optional)
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
        '404':
          description: Service not found
  /services/{id}:
    put:
      operationId: updateService
      description: Update an existing service by ID
      tags:
        - Services
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the service to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
      responses:
        '200':
          description: Service updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
        '400':
          description: Invalid input data
        '404':
          description: Service not found
        '500':
          description: Internal server error
  /service/done:
    get:
      operationId: getProvidedService
      description: Retrieve a list of provided service.
      tags:
        - Services
      responses:
        '200':
          description: A list of all bookings.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookingResponse'
        '404':
          description: Service not found
        '500':
          description: Internal server error
  /service/booking:
    post:
      operationId: createBooking
      description: Create a booking for a service.
      tags:
        - Bookings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
      responses:
        '201':
          description: Booking created successfully, returns the created booking.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        '400':
          description: Invalid input data
        '500':
          description: Internal server error
    delete:
      operationId: cancelBooking
      description: Cancel an existing booking by ID.
      tags:
        - Bookings
      parameters:
        - name: id
          in: query
          required: true
          description: ID of the booking to cancel.
          schema:
            type: integer
      responses:
        '204':
          description: Booking canceled successfully (no content).
        '404':
          description: Booking not found.
    get :
      operationId : getBookings
      description : Retrieve a list of all bookings.
      tags :
        - Bookings
      responses :
        '200' :
          description : A list of all bookings.
          content :
            application/json :
              schema :
                type : array
                items :
                  $ref : '#/components/schemas/BookingResponse'
        '404':
          description: Service not found
        '500':
          description: Internal server error
  /service/booking/{id}:
    put:
      operationId: changeBookingAppointmentTime
      description : change booking appointment time.
      tags :
        - Bookings
      parameters :
        - name : id
          in : path
          required : true
          description : ID of the booking to edit.
          schema :
            type : integer
      requestBody :
        required : true
        content :
          application/json :
            schema :
              $ref : '#/components/schemas/BookingUpdate'
      responses :
        '200' :
          description : Booking updated successfully.
          content :
            application/json :
              schema :
                $ref : '#/components/schemas/BookingResponse'
        '404' :
          description : Booking not found.
        '400' :
          description : Invalid input data.
components:
  schemas:
    ServiceResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Web Development"
        description:
          type: string
          example: "Full-stack web development services"
      required:
        - id
        - name
    ServiceRequest:
      type: object
      properties:
        name:
          type: string
          example: "Web Development"
        description:
          type: string
          example: "Full-stack web development services"
    BookingRequest :
      type : object
      properties :
        service_id :
          type : integer
          example : 1
        appointment_time :
          type : string
          format : date-time
      required:
        - service_id
        - appointment_time
    BookingResponse :
      type : object
      properties :
        id :
          type : integer
          example : 1
        service :
          $ref : '#/components/schemas/ServiceResponse'
        appointment_time :
          type : string
          format : date-time
      required:
        - id
        - service
        - appointment_time
    BookingUpdate :
      type : object
      properties :
        appointment_time :
          type : string
          format : date-time
      required:
        - appointment_time